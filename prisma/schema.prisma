generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  idvk        Int
  id_classify Int      @default(1)
  name        String   @default("zero")
  lvl         Int      @default(1)
  xp          Int      @default(0)
  health      Int      @default(2)
  health_max  Int      @default(2)
  atk         Int      @default(1)
  mana        Int      @default(0)
  point       Int      @default(2)
  id_region   Int      @default(0)
  skill       String
  crdate      DateTime @default(now())
  Battle      Battle[]
  classify    Classify @relation(fields: [id_classify], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Location {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  Region Region[]
  Mob    Mob[]
}

model Region {
  id          Int      @id @default(autoincrement())
  id_location Int
  uid         Int      @unique
  uid_dead    Int
  road        String
  label       String
  name        String
  mob_min     Int
  mob_max     Int
  boss        Int
  location    Location @relation(fields: [id_location], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Classify {
  id   Int    @id @default(autoincrement())
  name String @unique
  Mob  Mob[]
  User User[]
}

model Mob {
  id          Int      @id @default(autoincrement())
  id_location Int
  id_classify Int
  xp          Int
  name        String   @unique
  atk         Int
  health      Int
  health_max  Int
  mana        Int
  skill       String
  location    Location @relation(fields: [id_location], references: [id], onDelete: Cascade, onUpdate: Cascade)
  classify    Classify @relation(fields: [id_classify], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Battle {
  id           Int    @id @default(autoincrement())
  id_user      Int    @unique
  queue_battle String
  effect_list  String
  queue_dead   String
  turn         Int
  target       Int
  user         User   @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
